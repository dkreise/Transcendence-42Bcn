services:
  db:
    image: postgres
    container_name: db-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - db_data:/var/lib/postgresql/data
      - type: tmpfs
        target: /var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
       - trs_net

  user-mgmt:
    build:
      context: ./back/user_mgmt
    container_name: user-mgmt
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://admin:12345@db:5432/transcendence
      - DJANGO_SETTINGS_MODULE=user_mgmt.settings
      - REDIS_HOST=redis
    env_file:
      - .env
    networks:
      - trs_net
    restart: always
    volumes:
      - user-mgmt:/usr/src/app
      - certs:/usr/src/app/certs
    ports:
      - "${USER_MGMT_PORT}:${USER_MGMT_PORT}"

  game:
    build:
      context: ./back/game
    container_name: game
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=game.settings
    env_file:
      - .env
    networks:
       - trs_net
    restart: always
    volumes:
      - game:/usr/src/app
      - certs:/usr/src/app/certs
    ports:
      - "${GAME_PORT}:${GAME_PORT}"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: redis
    build: ./back/redis
    restart: always
    networks:
       - trs_net
    env_file:
      - .env
    expose:
      - '6379'

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    networks:
      - trs_net
    restart: always
    env_file:
      - .env
    volumes:
      - ./front/static:/usr/share/nginx/html/static
      - certs:/usr/app/certs

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      device: ./postgres

  user-mgmt:
    driver: local
    driver_opts:
      type: none
      device: ./back/user_mgmt
      o: bind
      
  game:
    driver: local
    driver_opts:
      type: none
      device: ./back/game
      o: bind
  
  certs:
    driver: local
    driver_opts:
      type: none
      device: ./certs
      o: bind

networks:
  trs_net:
    driver: bridge
